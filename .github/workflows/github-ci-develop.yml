name: Application CI Develop
on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
jobs:
    pipeline:
        name: nid_aux_histoires pipeline
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
        timeout-minutes: 40
        env:
            NODE_VERSION: 12.16.1
            SPRING_OUTPUT_ANSI_ENABLED: DETECT
            SPRING_JPA_SHOW_SQL: false
            JHI_DISABLE_WEBPACK_LOGS: true
            NG_CLI_ANALYTICS: false
        steps:
            - uses: actions/checkout@v2
              with:
                fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            - uses: actions/setup-node@v1
              with:
                node-version: 12.16.1
            - name: Set up JDK 11
              uses: actions/setup-java@v1
              with:
                java-version: '11.x'
            - name: Cache SonarCloud packages
              uses: actions/cache@v1
              with:
                path: ~/.sonar/cache
                key: ${{ runner.os }}-sonar
                restore-keys: ${{ runner.os }}-sonar
            - name: Cache Maven packages
              uses: actions/cache@v1
              with:
                path: ~/.m2
                key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                restore-keys: ${{ runner.os }}-m2
            - name: Install node.js packages
              run: npm install
            - name: Install libegl1
              run: sudo apt install libegl1-mesa
            - name: Install libopengl0
              run: sudo apt install libopengl0
            - name: Install calibre
              run: sudo -v && wget -nv -O- https://download.calibre-ebook.com/linux-installer.sh | sudo sh /dev/stdin
            - name: Create BooksExports
              run: mkdir /home/runner/BooksExports
            - name: Change rights BooksExports
              run: chmod 777 -R /home/runner/BooksExports
            - name: Run backend test
              run: |
                chmod +x mvnw
                ./mvnw -ntp clean verify -P-webpack
            - name: Run frontend test
              run: npm run test
            - name: Analyze code with SonarQube
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              run: |
                ./mvnw -ntp org.jacoco:jacoco-maven-plugin:prepare-agent initialize sonar:sonar org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Manerial_story_jhipster -Dsonar.login=$SONAR_TOKEN
